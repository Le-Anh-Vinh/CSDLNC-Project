<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/style/ThongTinDatBan.css">
    <title>Document</title>
</head>
<body>
    <!-- Table -->
    <div class="Table-list">
        <h3>Select Table:</h3>
        <% Tables.forEach(table => { %>
          <a href="#" class="table-option" data-table-id="<%= table.SoBan %>">
              <span class="table-name"><%= table.SoBan %></span>
              <span class="table-capacity">Max Capacity: <%= table.SLKhachToiDa %></span>
          </a>
      <% }); %>
      </div>

    <!-- Product -->
    <div class="menu-list">
        <h3>Select dishes:</h3>
        <% dishes.forEach(dish => { %>
          <a href="#" class="menu-item" data-dish-id="<%= dish.MaMA %>">
              <span class="dish-name"><%= dish.TenMA %></span>
              <span class="dish-description"><%= dish.MoTa %></span>
              <span class="dish-price"><%= dish.GiaMA %> VND</span>
              <div class="quantity-control">
                  <button class="decrease">-</button>
                  <span class="quantity">0</span>
                  <button class="increase">+</button>
              </div>
          </a>
      <% }); %>
      </div>
      <div class="confirm-section">
        <div class="confirm-section__price">
          <h3 class="label">TOTAL PRICE</h3>
          <div class="final-price">0 VNĐ</div>
        </div>
        <div class="confirm-section__btn">
          <button id="checkout-btn" class="checkout-button">CHECKOUT</button>
        </div>
      </div>

      <div class="overlay"></div>
        <div class="popup">
            <div class="popup-content">
                <!-- Content will be injected dynamically -->
            </div>
            <div class="popup-btn">
                <button class="submit-confirm">Submit</button>
                <button class="close-popup">Close</button>
            </div>
        </div>

      <script>
        document.addEventListener('DOMContentLoaded', () => {
        const menuItems = document.querySelectorAll('.menu-item');
        const totalPriceElement = document.querySelector('.final-price');

        let totalPrice = 0; // Tổng giá tiền

        // Hàm cập nhật tổng giá
        function updateTotalPrice() {
            totalPrice = 0;

            menuItems.forEach(item => {
                const price = parseFloat(item.querySelector('.dish-price').textContent.replace(' VND', ''));
                const quantity = parseInt(item.querySelector('.quantity').textContent, 10);

                if (quantity > 0) {
                    totalPrice += price * quantity;
                }
            });

            totalPriceElement.textContent = `${totalPrice.toLocaleString()} VNĐ`;
        }

        menuItems.forEach(item => {
            const decreaseButton = item.querySelector('.decrease');
            const increaseButton = item.querySelector('.increase');
            const quantitySpan = item.querySelector('.quantity');
            const dishId = item.getAttribute('data-dish-id');

            decreaseButton.addEventListener('click', async () => {
                let currentQuantity = parseInt(quantitySpan.textContent, 10);
                if (currentQuantity > 0) {
                    currentQuantity -= 1;
                    quantitySpan.textContent = currentQuantity;

                    if (currentQuantity === 0) {
                        // Send DELETE request to /cart
                        await fetch('/cart', {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ dishID: dishId }),
                        });
                    } else {
                        // Send POST request to /cart with updated quantity
                        await fetch('/cart', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ dishID: dishId, quantity: currentQuantity }),
                        });
                    }
                    updateTotalPrice(); // Cập nhật tổng giá
                }
            });

            increaseButton.addEventListener('click', async () => {
                let currentQuantity = parseInt(quantitySpan.textContent, 10);
                currentQuantity += 1;
                quantitySpan.textContent = currentQuantity;

                // Send POST request to /cart with updated quantity
                await fetch('/cart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ dishID: dishId, quantity: currentQuantity }),
                });

                updateTotalPrice(); // Cập nhật tổng giá
            });
        });

        // Cập nhật tổng giá ngay khi trang tải
        updateTotalPrice();
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const tableOptions = document.querySelectorAll('.table-option');

            tableOptions.forEach(table => {
                table.addEventListener('click', function (event) {
                    event.preventDefault(); // Prevent default link behavior

                    // Toggle the "selected" class for the clicked table
                    const isSelected = this.classList.contains('selected');

                    if (isSelected) {
                        // If already selected, remove the "selected" class
                        this.classList.remove('selected');

                        // Re-enable click events on all tables
                        tableOptions.forEach(t => t.style.pointerEvents = '');
                    } else {
                        // Otherwise, remove "selected" class from all tables and disable clicks
                        tableOptions.forEach(t => {
                            t.classList.remove('selected');
                            t.style.pointerEvents = 'none';
                        });

                        // Add "selected" class to the clicked table
                        this.classList.add('selected');
                        this.style.pointerEvents = ''; // Allow clicking on this table again
                    }
                });
            });
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const overlay = document.querySelector('.overlay');
            const popup = document.querySelector('.popup');
            const popupContent = popup.querySelector('.popup-content');
            const closePopupButton = popup.querySelector('.close-popup');

            function showPopup(content) {
                popupContent.innerHTML = content;
                overlay.style.display = 'block';
                popup.style.display = 'block';
            }

            function closePopup() {
                overlay.style.display = 'none';
                popup.style.display = 'none';
            }

            document.querySelectorAll('.checkout-button').forEach(button => {
                button.addEventListener('click', function () {

                    const content = `
                        <h3>Complete Reservation</h3>
                        <hr>
                        <label for="customer-quantity">Enter Number of Customers:</label>
                        <input type="text" id="customer-quantity" name="customer-quantity">
                        <hr>
                        <label for="customer-phone">Enter Customer phone number:</label>
                        <input type="text" id="customer-phone" name="customer-phone">
                        <hr>
                        <label for="customer-note">Note for us:</label>
                        <input type="text" id="customer-note" name="customer-note">
                        
                    `;
                    showPopup(content);

                    // Add event listener to the submit button
                    const submitButton = popup.querySelector('.submit-confirm');
                    submitButton.addEventListener('click', () => {
                        const customerQuantityInput = document.getElementById('customer-quantity');
                        const customerPhoneInput = document.getElementById('customer-phone');
                        const customerNoteInput = document.getElementById('customer-note'); // Optional

                        const customerQuantity = customerQuantityInput.value.trim();
                        const customerPhone = customerPhoneInput.value.trim();

                        // Kiểm tra các trường bắt buộc
                        if (!customerQuantity || isNaN(customerQuantity) || Number(customerQuantity) <= 0) {
                            alert('Please enter a valid number of customers.');
                            return;
                        }
                        if (!customerPhone || !/^\d+$/.test(customerPhone)) {
                            alert('Please enter a valid customer phone number.');
                            return;
                        }

                        // Lấy danh sách món ăn
                        const menuItems = document.querySelectorAll('.menu-item');
                        const selectedDishes = Array.from(menuItems)
                            .map(item => {
                                const quantity = parseInt(item.querySelector('.quantity').textContent, 10);
                                if (quantity > 0) {
                                    return {
                                        dishID: item.getAttribute('data-dish-id'),
                                        dishName: item.querySelector('.dish-name').textContent.trim(),
                                        quantity,
                                    };
                                }
                                return null;
                            })
                            .filter(dish => dish !== null);

                        // Lấy thông tin bàn
                        const selectedTable = document.querySelector('.table-option.selected');
                        if (!selectedTable) {
                            alert('Please select a table.');
                            return;
                        }

                        const tableID = selectedTable.getAttribute('data-table-id');

                        // Lấy ngày tháng và thời gian từ URL
                        const urlParams = new URLSearchParams(window.location.search);
                        const reservationDate = urlParams.get('date');
                        const reservationTime = urlParams.get('time');


                        // Nếu các trường hợp lệ, gửi dữ liệu
                        const payload = {
                            reservationDate,
                            reservationTime,
                            tableID,
                            customerQuantity: parseInt(customerQuantity, 10),
                            customerPhone,
                            customerNote: customerNoteInput ? customerNoteInput.value.trim() : '',
                        };

                        fetch('/booking', { // Thay api
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(payload),
                        })
                            .then(response => {
                                if (response.ok) {
                                    alert('Reservation completed successfully!');
                                    closePopup(); // Đóng popup
                                    window.location.href = '/user';
                                } else {
                                    alert('Failed to complete reservation. Please try again.');
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                alert('An error occurred while completing the reservation.');
                            });
                    });
                });
            });

            closePopupButton.addEventListener('click', closePopup);
            overlay.addEventListener('click', closePopup);
        });
    </script>

</body>
</html>